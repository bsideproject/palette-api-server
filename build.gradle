buildscript {
    ext {
        docsVersion = "0.16.0"
        querydslVersion = "5.0.0"
        jwtVersion = "0.9.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.9'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
}

group = 'com.palette'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    set('springCloudVersion', "2021.0.2")
}

dependencyManagement {
    imports {
        mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:2.3.3"
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
    asciidoctorExtensions    // Spring REST Docs
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //DGS
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation("com.netflix.graphql.dgs:graphql-dgs-extended-scalars")
    implementation("com.tailrocks.graphql:graphql-datetime-dgs-starter:5.0.1")

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

    implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
    implementation "com.querydsl:querydsl-apt:${querydslVersion}"

    // jwt
    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"

    // spring actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring REST Docs
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // AWS Pamametor store
    implementation group: 'io.awspring.cloud', name: 'spring-cloud-starter-aws-parameter-store-config'

    // AWS S3 for ncp object storage
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.238'

    // h2 & mysql
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    // apache library
    implementation 'org.apache.commons:commons-lang3:3.0'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.0.0'

    // quartz
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//*.plain.jar exclude
jar {
    enabled = false
}

bootJar {
    archivesBaseName = 'palette'
    archiveFileName = 'palette.jar'
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl

tasks.named('test') {
    useJUnitPlatform()
}
